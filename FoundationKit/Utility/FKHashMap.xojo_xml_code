<?xml version="1.0" encoding="UTF-8"?>
<RBProject version="2020r1.1" FormatVersion="2" MinIDEVersion="20070100">
<block type="Module" ID="615698431">
 <ObjName>FKHashMap</ObjName>
 <ObjContainerID>0</ObjContainerID>
 <IsClass>1</IsClass>
 <Interfaces>FKMap</Interfaces>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Clear</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Removes all of the mappings from this map</CodeDescription>
  <PartID>1856620543</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Clear()</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine>' Removes all of the mappings from this map</SourceLine>
   <SourceLine>'</SourceLine>
   <SourceLine>' - Note: Part of the FKMap interface.</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mData.RemoveAll</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ContainsKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Returns True if this map contains a mapping for the specified key.</CodeDescription>
  <PartID>860635135</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ContainsKey(key As Variant) As Boolean</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine>' Returns True if this map contains a mapping for the specified key.</SourceLine>
   <SourceLine>'</SourceLine>
   <SourceLine>' - Note: Part of the FKMap interface.</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return mData.HasKey(key)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>key As Variant</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>ContainsValue</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Returns True if this map maps one or more keys to the specified value.</CodeDescription>
  <PartID>1699993599</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ContainsValue(value As Variant) As Boolean</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine>' Returns True if this map maps one or more keys to the specified value.</SourceLine>
   <SourceLine>'</SourceLine>
   <SourceLine>' - Note: Part of the FKMap interface.</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Var values() As Variant = mData.Values</SourceLine>
   <SourceLine>For Each v As Variant In values</SourceLine>
   <SourceLine>If ComparatorDelegate(v, value) = 0 Then Return True</SourceLine>
   <SourceLine>Next v</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return False</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>value As Variant</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Get</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Returns the value to which the specified key is mapped, or Nil if this map contains no mapping for the key.</CodeDescription>
  <PartID>1797390335</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Get(key As Variant) As Variant</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine>' Returns the value to which the specified key is mapped, or Nil if this map </SourceLine>
   <SourceLine>' contains no mapping for the key.</SourceLine>
   <SourceLine>'</SourceLine>
   <SourceLine>' - Note: Part of the FKMap interface.</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return mData.Lookup(key, Nil)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>key As Variant</ItemParams>
  <ItemResult>Variant</ItemResult>
 </Method>
 <Method>
  <ItemName>GetOrDefault</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Returns the value to which the specified key is mapped, or `defaultValue` if this map contains no mapping for the key.</CodeDescription>
  <PartID>2103777279</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetOrDefault(key As Variant, default As Variant) As Variant</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine>' Returns the value to which the specified key is mapped, or `defaultValue` if </SourceLine>
   <SourceLine>' this map contains no mapping for the key.</SourceLine>
   <SourceLine>'</SourceLine>
   <SourceLine>' - Note: Part of the FKMap interface.</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return mData.Lookup(key, default)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>key As Variant, default As Variant</ItemParams>
  <ItemResult>Variant</ItemResult>
 </Method>
 <Method>
  <ItemName>IsEmpty</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1672691711</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsEmpty() As Boolean</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine>' - Note: Part of the FKMap interface.</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Raise New UnsupportedOperationException("This method is not implemented")</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Put</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Associates a value with the specified key in this map. Returns the previous value associated with key, or Nil if there was no mapping for the key.</CodeDescription>
  <PartID>547223551</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Put(key As Variant, value As Variant) As Variant</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine>' Associates the specified value with the specified key in this map.</SourceLine>
   <SourceLine>'</SourceLine>
   <SourceLine>' - Returns: The previous value associated with key, or Nil if there was no mapping for key.</SourceLine>
   <SourceLine>'</SourceLine>
   <SourceLine>' - Notes:</SourceLine>
   <SourceLine>' Part of the FKMap interface.</SourceLine>
   <SourceLine>' If the map previously contained a mapping for the key, the old value is replaced </SourceLine>
   <SourceLine>' by the specified value.</SourceLine>
   <SourceLine>' A map is said to contain a mapping for a key if and only if: map.ContainsKey(key) = True</SourceLine>
   <SourceLine>' A Nil return can also indicate that the map previously associated Nil with `key`.</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If mData.HasKey(key) Then</SourceLine>
   <SourceLine>Var tmp As Variant = mData.Value(key)</SourceLine>
   <SourceLine>mData.Value(key) = value</SourceLine>
   <SourceLine>Return tmp</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>mData.Value(key) = value</SourceLine>
   <SourceLine>Return Nil</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>key As Variant, value As Variant</ItemParams>
  <ItemResult>Variant</ItemResult>
 </Method>
 <Method>
  <ItemName>PutAll</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Copies all of the mappings from the specified map to this map. These mappings will replace any mappings that this map had for any of the keys currently in the specified map.</CodeDescription>
  <PartID>1642096639</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub PutAll(m As FKMap)</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine>' Copies all of the mappings from the specified map to this map. </SourceLine>
   <SourceLine>' These mappings will replace any mappings that this map had for any of the keys </SourceLine>
   <SourceLine>' currently in the specified map.</SourceLine>
   <SourceLine>'</SourceLine>
   <SourceLine>' - Note: Part of the FKMap interface.</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Raise New UnsupportedOperationException("This method is not implemented")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>m As FKMap</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>PutIfAbsent</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1402894335</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function PutIfAbsent(key As Variant, value As Variant) As Variant</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine>' - Note: Part of the FKMap interface.</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Raise New UnsupportedOperationException("This method is not implemented")</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>key As Variant, value As Variant</ItemParams>
  <ItemResult>Variant</ItemResult>
 </Method>
 <Method>
  <ItemName>Remove</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Removes the mapping for the specified key from this map if present. Returns the previous value or Nil.</CodeDescription>
  <PartID>2010908671</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Remove(key As Variant) As Variant</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine>' Removes the mapping for the specified key from this map if present. </SourceLine>
   <SourceLine>'</SourceLine>
   <SourceLine>' - Returns: The previous value associated with key, or Nil if there was no mapping for key.</SourceLine>
   <SourceLine>'</SourceLine>
   <SourceLine>' - Notes:</SourceLine>
   <SourceLine>' Part of the FKMap interface.</SourceLine>
   <SourceLine>' A Nil return can also indicate that the map previously associated Nil with key.</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If mData.HasKey(key) Then</SourceLine>
   <SourceLine>Var tmp As Variant = mData.Value(key)</SourceLine>
   <SourceLine>mData.Remove(key)</SourceLine>
   <SourceLine>Return tmp</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>Return Nil</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>key As Variant</ItemParams>
  <ItemResult>Variant</ItemResult>
 </Method>
 <Method>
  <ItemName>Remove</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1707884543</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Remove(key As Variant, value As Variant) As Boolean</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine>' - Note: Part of the FKMap interface.</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Raise New UnsupportedOperationException("This method is not implemented")</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>key As Variant, value As Variant</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Replace</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1771802623</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Replace(key As Variant, value As Variant) As Variant</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine>' - Note: Part of the FKMap interface.</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Raise New UnsupportedOperationException("This method is not implemented")</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>key As Variant, value As Variant</ItemParams>
  <ItemResult>Variant</ItemResult>
 </Method>
 <Method>
  <ItemName>Replace</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1751369727</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Replace(key As Variant, oldValue As Variant, newValue As Variant) As Boolean</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine>' - Note: Part of the FKMap interface.</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Raise New UnsupportedOperationException("This method is not implemented")</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>key As Variant, oldValue As Variant, newValue As Variant</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Size</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Returns the number of key-value mappings in this map.</CodeDescription>
  <PartID>2033616895</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Size() As Integer</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine>' Returns the number of key-value mappings in this map.</SourceLine>
   <SourceLine>'</SourceLine>
   <SourceLine>' - Note: Part of the FKMap interface.</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return mData.KeyCount</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>Values</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Returns an array of the values contained in this map.</CodeDescription>
  <PartID>1827897343</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Values() As Variant()</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine>' Returns an array of the values contained in this map.</SourceLine>
   <SourceLine>'</SourceLine>
   <SourceLine>' - Note: Part of the FKMap interface.</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return mData.Values</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Variant()</ItemResult>
 </Method>
 <Method>
  <ItemName>HashCode</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Returns the hash code value for this map.</CodeDescription>
  <PartID>1639874559</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function HashCode() As Integer</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine>' Returns the hash code value for this map.</SourceLine>
   <SourceLine>'</SourceLine>
   <SourceLine>' - Note: Part of the FKMap interface.</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return Variant(Self).Hash</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2056738815</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine>' Default constructor.</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mData = New Dictionary(AddressOf ComparatorDelegate)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ComparatorDelegate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1184882687</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ComparatorDelegate(leftKey As Variant, rightKey As Variant) As Integer</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine>' Custom comparator for our backing dictionary.</SourceLine>
   <SourceLine>'</SourceLine>
   <SourceLine>' - Notes:</SourceLine>
   <SourceLine>' Returns zero if both objects are considered equal. Otherwise returns `-1`.</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Quick reference check.</SourceLine>
   <SourceLine>If leftKey Is rightKey Then Return 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Check using the FKComparable interface.</SourceLine>
   <SourceLine>If leftKey IsA FKComparable Then</SourceLine>
   <SourceLine>If FKComparable(leftKey).Equals(rightKey) Then</SourceLine>
   <SourceLine>Return 0</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>Return -1</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>ElseIf rightKey IsA FKComparable Then</SourceLine>
   <SourceLine>If FKComparable(rightKey).Equals(leftKey) Then</SourceLine>
   <SourceLine>Return 0</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>Return -1</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Case sensitive strings.</SourceLine>
   <SourceLine>If leftKey.Type = Variant.TypeString And rightKey.Type = Variant.TypeString Then</SourceLine>
   <SourceLine>Var leftString As String = leftKey</SourceLine>
   <SourceLine>Return leftString.Compare(rightKey, ComparisonOptions.CaseSensitive)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// All other types.</SourceLine>
   <SourceLine>Return If(leftKey = rightKey, 0, -1)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>leftKey As Variant, rightKey As Variant</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>Put</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Associates a value with the specified key in this map.</CodeDescription>
  <PartID>1756952575</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Put(key As Variant, value As Variant)</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine>' Associates the specified value with the specified key in this map.</SourceLine>
   <SourceLine>'</SourceLine>
   <SourceLine>' - Notes:</SourceLine>
   <SourceLine>' Part of the FKMap interface.</SourceLine>
   <SourceLine>' If the map previously contained a mapping for the key, the old value is replaced </SourceLine>
   <SourceLine>' by the specified value.</SourceLine>
   <SourceLine>' A map is said to contain a mapping for a key if and only if: map.ContainsKey(key) = True</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mData.Value(key) = value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>key As Variant, value As Variant</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>mData</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>The backing dictionary.</CodeDescription>
  <PartID>1610739711</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mData As Dictionary</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mData As Dictionary</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
</RBProject>
